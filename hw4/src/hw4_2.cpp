////////////////////////////////////////////////////////////////////////////////
// Data Structures and Algorithms - Homework 4                                //
// hw4_2.cpp                                                                  //
// The main functions                                                         //
//                                                                            //
// Author: emfo<emfomy@gmail.com>                                             //
////////////////////////////////////////////////////////////////////////////////

#include <cstdlib>
#include <ctime>
#include <iostream>
#include <fstream>
#include <iomanip>
#include "hw4.hpp"
#include "sample_set.hpp"
#include "forest.hpp"
using namespace hw4;
using namespace std;

////////////////////////////////////////////////////////////////////////////////
// Main function                                                              //
////////////////////////////////////////////////////////////////////////////////
int main( int argc, char *argv[] ) {
  SampleSet set;
  ifstream fin;
  const int num_trees = (argc > 2) ? atof(argv[2]) : 1;

  ios::sync_with_stdio(false);
  srand(time(NULL));

  // Load sample set from file
  fin.open(argv[1]);
  fin >> set;
  fin.close();

  // Create a forest
  Forest forest(set, num_trees);

  // Display file comments
  cout << setw(80) << setfill('/')
       << "" << endl;
  cout << setw(78) << left << setfill(' ')
       << "// Data Structures and Algorithms - Homework 4" << "//" << endl;
  cout << setw(78) << left << setfill(' ')
       << "// forest_predict.cpp" << "//" << endl;
  cout << setw(78) << left << setfill(' ')
       << "// A decision forest generated by '"+string(argv[0])+"'"
       << "//" << endl;
  cout << setw(78) << left << setfill(' ')
       << "//   trained by '"+string(argv[1])+
          "' with "+to_string(num_trees)+" trees" << "//" << endl;
  cout << setw(78) << setfill(' ')
       << "// " << "//\n";
  cout << setw(78) << left << setfill(' ')
       << "// Author: emfo<emfomy@gmail.com>" << "//" << endl;
  cout << setw(80) << setfill('/')
       << "" << endl << endl;

  // Display includes
  cout << "#include <cstdlib>" << endl;
  cout << "#include <ctime>" << endl << endl;

  // Display trees
  forest.PrintTrees();

  // Display function comments
  cout << setw(80) << setfill('/')
       << "" << endl;
  cout << setw(78) << left << setfill(' ')
       << "// Forest predict" << "//" << endl;
  cout << setw(78) << setfill(' ')
       << "// " << "//\n";
  cout << setw(78) << left << setfill(' ')
       << "// Parameters:" << "//" << endl;
  cout << setw(78) << left << setfill(' ')
       << "// The features of a sample" << "//" << endl;
  cout << setw(78) << setfill(' ')
       << "// " << "//\n";
  cout << setw(78) << left << setfill(' ')
       << "// Return Value:" << "//" << endl;
  cout << setw(78) << left << setfill(' ')
       << "// The predicted response of this sample" << "//" << endl;
  cout << setw(80) << setfill('/')
       << "" << endl;

  // Display function
  cout << "int forest_predict( double *attr ) {" << endl;
  cout << "  // Initialize random seed" << endl;
  cout << "  srand(time(NULL));" << endl << endl;
  cout << "  // Predict response using decision forest" << endl;
  forest.Print(1);
  cout << "}" << endl << endl;

  return 0;
}
